apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion sdkVersions.compileSdkVersion

    defaultConfig {
        minSdkVersion sdkVersions.minSdkVersion
        targetSdkVersion sdkVersions.targetSdkVersion
        versionCode sdkVersions.versionCode
        versionName sdkVersions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "APP_PKG", "\"${appPkg}\"")

        //其他组件module依旧需要引入
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "androidx.appcompat:appcompat:$depVersions.appcompat"
    api "androidx.core:core-ktx:$depVersions.core_ktx"
    api "androidx.constraintlayout:constraintlayout:$depVersions.constraintlayout"

    api "com.alibaba:arouter-api:$depVersions.arouter_api"
    kapt "com.alibaba:arouter-compiler:$depVersions.arouter_compiler_version" //其他组件module依旧需要引入

    api "android.arch.lifecycle:extensions:$depVersions.lifecycle_version"

    kapt "android.arch.lifecycle:compiler:$depVersions.lifecycle_version" //其他组件module依旧需要引入


//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.2.0'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
