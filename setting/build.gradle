def moduleName = project.getName()
def isIndependent = runModule == moduleName //当前module是否正在独立运行
def moduleDependencies = moduleDeps["$moduleName"]

if (isIndependent) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion sdkVersions.compileSdkVersion


    defaultConfig {
        if (isIndependent) {
            applicationId "${appPkg}.${moduleName}"
        }

        minSdkVersion sdkVersions.minSdkVersion
        targetSdkVersion sdkVersions.targetSdkVersion
        versionCode sdkVersions.versionCode
        versionName sdkVersions.versionName

        buildConfigField("String[]", "MODULE_DEPENDENCIES", getDependenciesStr(moduleDependencies))

        //其他组件module依旧需要引入
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

//    publishNonDefault true
    defaultPublishConfig "dependentRelease"

    flavorDimensions "dependency"
    productFlavors {
        if (isIndependent) {
            independent {
                dimension "dependency"
                matchingFallbacks = ["dependent"]
            }
        } else {
            dependent {
                dimension "dependency"
            }
        }
    }

    sourceSets {
        main {
//            if (isIndependent) {
//                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
//            } else {
//                manifest.srcFile 'src/main/release/AndroidManifest.xml'
//            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(":base")

    //需要依赖的module
    moduleDependencies.each { v ->
        if (runModule != v) {
            //当前运行的module无法依赖
            implementation project(":$v")
        }
    }

//    annotationProcessor 'com.alibaba:arouter-compiler:1.2.2' //其他组件module依旧需要引入
    kapt "com.alibaba:arouter-compiler:$depVersions.arouter_compiler" //其他组件module依旧需要引入
}