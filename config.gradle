ext {
    appPkg = "com.example.aaron.compsapp"

    //app,task,customer,setting
    runModule = "app"
//    kaptdepVersions = []
}

def sdkVersions = [:]
sdkVersions.compileSdkVersion = 28

sdkVersions.minSdkVersion = 23
sdkVersions.targetSdkVersion = 28
sdkVersions.versionCode = 1
sdkVersions.versionName = "1.0"
ext.sdkVersions = sdkVersions

def depVersions = [:]
depVersions.constraintlayout = "1.1.3"
depVersions.appcompat = "1.0.2"
depVersions.core_ktx = "1.0.2"
depVersions.arouter_api = "1.5.0"
depVersions.arouter_compiler_version = "1.2.2"
depVersions.lifecycle_version = "2.0.0"
ext.depVersions = depVersions

def moduleDeps = [:]
moduleDeps.app = ["task", "customer", "setting"] //app运行时需要依赖的module
moduleDeps.task = ["customer"] //task运行时需要依赖的module
moduleDeps.customer = [] //task运行时需要依赖的module
moduleDeps.setting = ["task", "customer"] //task运行时需要依赖的module
ext.moduleDeps = moduleDeps


/**
 * 生成依赖库集合的字符串形式，用来自定义BuildConfig属性使用
 * @param ds
 * @return
 */
static def getDependenciesStr(List ds) {
    StringBuilder sb = new StringBuilder();

    sb.append("{");
    for (int i = 0; i < ds.size(); i++) {

        sb.append("\"").append(ds.get(i)).append("\"");

        if (i != ds.size() - 1) {
            sb.append(",")
        }
    }
    sb.append("}");
    return sb.toString();
}

ext.getDependenciesStr = this.&getDependenciesStr